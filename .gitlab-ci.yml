# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

# test_name:
#  stage: allowed names: .pre, build, test, deploy, .post
#  image: the image to be used, make sure it's specific!!
#  before_script: To make sure the command to be run in the job is installed
#   - the command to be run before the actual script part
#  script: 
#  - command to run the test, look into jest
#   after_script:
#     - Same as before script, except after
#  More about command: for the job to be executed: command available, pip (npm), python (javascript(?))
# Will always run inside a docker container, hence why an image is required
# So I will need an image that has npm and javascript?
stages:
  - test
  - lint

unit-test:
  image: node:latest
  stage: test
  before_script:
    - npm install
  script:
    - npm run test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xm
  
linting:
  image: node:latest
  stage: lint

  script:
    - npm i eslint \
    - eslint-plugin-react
    # run eslint
    - node_modules/eslint/bin/eslint.js .